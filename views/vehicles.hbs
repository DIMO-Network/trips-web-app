<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>{{Title}}</title>
  <link href="https://api.mapbox.com/mapbox-gl-js/v2.3.1/mapbox-gl.css" rel="stylesheet">
  <script src="https://api.mapbox.com/mapbox-gl-js/v2.3.1/mapbox-gl.js" defer></script>
  <style>
    body {
      font-family: 'Arial', sans-serif;
      background-color: #f4f4f4;
      color: #333;
      margin: 0;
      padding: 20px;
    }

    h1 {
      color: #444444;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
    }

    th {
      background-color: #4CAF50;
      color: white;
      font-weight: bold;
      padding: 10px;
      text-align: left;
    }

    td {
      padding: 10px;
      text-align: left;
      border-bottom: 1px solid #ddd;
    }

    tr:nth-child(even) {
      background-color: #f2f2f2;
    }

    tr:hover {
      background-color: #ddd;
    }

    p {
      color: #555;
    }
    #map {
      height: 400px;
      width: 100%;
    }
  </style>
  <script>
    function toggleDeviceStatus(id) {
      var element = document.getElementById(id);
      if (element.style.display === "none") {
        element.style.display = "block";
      } else {
        element.style.display = "none";
      }
    }
    async function fetchAndDisplayMap(tokenID, tripID, startTime, endTime) {
      try {
        const url = `/api/trip/${tripID}?start=${encodeURIComponent(startTime)}&end=${encodeURIComponent(endTime)}`;
        const response = await fetch(url, {
          headers: {
            'Content-Type': 'application/json',
          },
          credentials: 'include',
        });

        if (!response.ok) {
          throw new Error('Failed to fetch trip data');
        }
        const geoJSON = await response.json();

        mapboxgl.accessToken = 'YOUR_MAPBOX_ACCESS_TOKEN';
        if (!window.map) {
          window.map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/streets-v11',
            center: [0, 0],
            zoom: 9
          });
        }

        if (window.map.getSource('route')) {
          window.map.getSource('route').setData(geoJSON);
        } else {
          window.map.addSource('route', {
            type: 'geojson',
            data: geoJSON
          });
          window.map.addLayer({
            id: 'route',
            type: 'line',
            source: 'route',
            layout: {
              'line-join': 'round',
              'line-cap': 'round'
            },
            paint: {
              'line-color': '#888',
              'line-width': 6
            }
          });
        }

        const bounds = new mapboxgl.LngLatBounds();
        geoJSON.features[0].geometry.coordinates.forEach(coord => bounds.extend(coord));
        window.map.fitBounds(bounds, { padding: 20 });
      } catch (error) {
        console.error('Error fetching trip data:', error);
      }
    }
  </script>
</head>
<body>
<h1>{{Title}}</h1>
{{#if Vehicles}}
  <table>
    <thead>
    <tr>
      <th>ID</th>
      <th>Make</th>
      <th>Model</th>
      <th>Year</th>
      <th>Device Status</th>
    </tr>
    </thead>
    <tbody>
    {{#each Vehicles}}
      <tr>
        <td>{{this.TokenID}}</td>
        <td>{{this.Definition.make}}</td>
        <td>{{this.Definition.model}}</td>
        <td>{{this.Definition.year}}</td>
        <td>
          <button onclick="toggleDeviceStatus('device-status-{{@index}}')">Expand Device Status</button>
          <div id="device-status-{{@index}}" style="display: none;">
            <table>
              <tr>
                <th>Signal Name</th>
                <th>Value</th>
                <th>Timestamp</th>
                <th>Source</th>
              </tr>
              {{#each this.DeviceStatusEntries}}
                <tr>
                  <td>{{this.SignalName}}</td>
                  <td>{{this.Value}}</td>
                  <td>{{this.Timestamp}}</td>
                  <td>{{this.Source}}</td>
                </tr>
              {{/each}}
            </table>
          </div>
          {{#if this.Trips}}
            <ul>
              {{#each this.Trips}}
                <li style="display: flex; align-items: center; justify-content: space-between;">
                  <span>Trip ID: {{this.id}}</span>
                  <button onclick="fetchAndDisplayMap('{{../this.TokenID}}', '{{this.id}}', '{{this.start.time}}', '{{this.end.time}}')" style="margin-left: 10px;">View Map</button>
                </li>
              {{/each}}
            </ul>
          {{else}}
            <p>No trips available for this vehicle.</p>
          {{/if}}
        </td>
      </tr>
    {{/each}}
    </tbody>
  </table>

  <div id="map"></div>
{{else}}
  <p>No vehicles to display.</p>
{{/if}}
</body>
</html>